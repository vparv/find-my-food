{"ast":null,"code":"import _slicedToArray from \"/Users/vineetparvathala/Downloads/FindMyFood-main-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vineetparvathala/Downloads/FindMyFood-main-main/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Deck from \"./components/Deck\";\n\nvar App = function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lat = _useState2[0],\n      setLat = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lng = _useState4[0],\n      setLng = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      status = _useState6[0],\n      setStatus = _useState6[1];\n\n  useEffect(function () {\n    var getLocation = function getLocation() {\n      if (!navigator.geolocation) {\n        setStatus('Geolocation is not supported by your browser');\n      } else {\n        setStatus('Locating...');\n        navigator.geolocation.getCurrentPosition(function (position) {\n          setStatus(null);\n          setLat(position.coords.latitude);\n          setLng(position.coords.longitude);\n        }, function () {\n          setStatus('Unable to retrieve your location');\n        });\n      }\n    };\n  });\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: getLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Get Location\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Coordinates\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, status), lat && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Latitude: \", lat), lng && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Longitude: \", lng)), React.createElement(Deck, {\n    latlong: (lat, lng),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/vineetparvathala/Downloads/FindMyFood-main-main/src/App.js"],"names":["React","useEffect","useState","Deck","App","lat","setLat","lng","setLng","status","setStatus","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACIF,QAAQ,CAAC,IAAD,CADZ;AAAA;AAAA,MACXG,GADW;AAAA,MACNC,MADM;;AAAA,mBAEIJ,QAAQ,CAAC,IAAD,CAFZ;AAAA;AAAA,MAEXK,GAFW;AAAA,MAENC,MAFM;;AAAA,mBAGUN,QAAQ,CAAC,IAAD,CAHlB;AAAA;AAAA,MAGXO,MAHW;AAAA,MAGHC,SAHG;;AAMlBT,EAAAA,SAAS,CAAC,YAAM;AAChB,QAAMU,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,UAAI,CAACC,SAAS,CAACC,WAAf,EAA4B;AAC1BH,QAAAA,SAAS,CAAC,8CAAD,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,SAAS,CAAC,aAAD,CAAT;AACAE,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AACrDL,UAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,UAAAA,MAAM,CAACS,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAT,UAAAA,MAAM,CAACO,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAN;AACD,SAJD,EAIG,YAAM;AACPR,UAAAA,SAAS,CAAC,kCAAD,CAAT;AACD,SAND;AAOD;AACF,KAbD;AAcC,GAfQ,CAAT;AAiBE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,MAAJ,CAHF,EAIGJ,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcA,GAAd,CAJV,EAKGE,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeA,GAAf,CALV,CADA,EAWA,oBAAC,IAAD;AAAM,IAAA,OAAO,GAAIF,GAAG,EAAEE,GAAT,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,CADF;AAeD,CAtCD;;AAwCA,eAAeH,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Deck from \"./components/Deck\";\n\nconst App = () => {\nconst [lat, setLat] = useState(null);\nconst [lng, setLng] = useState(null);\nconst [status, setStatus] = useState(null);\n\n\nuseEffect(() => {\nconst getLocation = () => {\n  if (!navigator.geolocation) {\n    setStatus('Geolocation is not supported by your browser');\n  } else {\n    setStatus('Locating...');\n    navigator.geolocation.getCurrentPosition((position) => {\n      setStatus(null);\n      setLat(position.coords.latitude);\n      setLng(position.coords.longitude);\n    }, () => {\n      setStatus('Unable to retrieve your location');\n    });\n  }\n}\n});\n\n  return (\n    <span>\n    <div className=\"App\">\n      <button onClick={getLocation}>Get Location</button>\n      <h1>Coordinates</h1>\n      <p>{status}</p>\n      {lat && <p>Latitude: {lat}</p>}\n      {lng && <p>Longitude: {lng}</p>}\n    \n\n    \n    </div>\n    <Deck latlong = {lat, lng}/>\n    </span>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}